{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u8bf4\u660e","text":""},{"location":"#python","title":"Python \u73af\u5883","text":"<p>Python 3.10+</p>"},{"location":"#_2","title":"\u5b89\u88c5","text":"<pre><code># todo next ...\n</code></pre>"},{"location":"#_3","title":"\u793a\u4f8b","text":"<pre><code>from yast import Yast\nfrom yast.responses import JSONResponse\n\napp = Yast()\n\n@app.route('/')\nasync def index(request):\n    return JSONResponse({'demo': 'this is a demo'})\n\nif __name__ == '__main__':\n    uvicorn.run(app, host='0.0.0.0', port=8000)\n</code></pre>"},{"location":"#_4","title":"\u4f9d\u8d56\u5305","text":""},{"location":"#_5","title":"\u7c7b\u578b\u5b9a\u4e49","text":"<pre><code>import typing\n\nStrPairs = typing.Sequence[typing.Tuple[str, str]]\nStrDict = typing.Mapping[str, str]\n\nScope = typing.Mapping[str, typing.Any]\nMessage = typing.Mapping[str, typing.Any]\n\nReceive = typing.Callable[[], typing.Awaitable[Message]]\nSend = typing.Callable[[Message], typing.Awaitable[None]]\n\nASGIInstance = typing.Callable[[Receive, Send], typing.Awaitable[None]]\nASGIApp = typing.Callable[[Scope], ASGIInstance]\n</code></pre>"},{"location":"schemas/","title":"Schemas","text":""},{"location":"schemas/#_1","title":"\u8bf4\u660e","text":"<p>\u7528\u4e8e\u81ea\u52a8\u626b\u63cf\u76f8\u5173\u51fd\u6570\u6ce8\u91ca\uff0c\u5e76\u751f\u6210\u6587\u6863\u7ed3\u6784</p>"},{"location":"schemas/#apis","title":"APIs","text":"API \u8bf4\u660e Yast.schema_generator \u6587\u6863\u751f\u6210\u5668 Yast.schema \u6587\u6863\u7ed3\u6784"},{"location":"schemas/#_2","title":"\u793a\u4f8b","text":"<pre><code>from yast import Yast\nfrom yast.endpoints import HttpEndPoint\nfrom yast.schemas import SchemaGenerator\n\napp = Yast()\napp.schema_generator = SchemaGenerator(\n    {\n        \"openapi\": \"3.0.0\",\n        \"info\": {\n            \"title\": \"Example API\",\n            \"version\": \"1.0\",\n        },\n    }\n)\n\n@app.route(\"/schema\")\nclass SchemaEndPoint(HttpEndPoint):\n    def get(self, req):\n\"\"\"\n        responses:\n            200:\n                description: SchemaEndPoint\n                examples:\n                    [{\"name\": \"AAA\"}, {\"name\": \"BBB\"}]\n        \"\"\"\n        pass\n\n\ndef test_schema_generation():\n    assert app.schema == {\n        \"openapi\": \"3.0.0\",\n        \"info\": {\n            \"title\": \"Example API\",\n            \"version\": \"1.0\",\n        },\n        \"paths\": {\n            \"/schema\": {\n                \"get\": {\n                    \"responses\": {\n                        200: {\n                            \"description\": \"SchemaEndPoint\",\n                            \"examples\": [\n                                {\"name\": \"AAA\"},\n                                {\"name\": \"BBB\"},\n                            ],\n                        }\n                    }\n                }\n            }\n        },\n    }\n</code></pre>"},{"location":"testclient/","title":"TestClient","text":""},{"location":"testclient/#_1","title":"\u8bf4\u660e","text":"<p>\u8be5\u6a21\u5757\u53ef\u7528\u4e8e\u6a21\u62df\u8bf7\u6c42</p>"},{"location":"testclient/#_2","title":"\u793a\u4f8b","text":"<pre><code>from yast import Yast, TestClient\nfrom yast.responses import HTMLResponse\n\n\ndef app(scope):\n    async def asgi(recv, send):\n        await send({\n            \"type\": \"http.response.start\",\n            \"status\": 200,\n            'headers': [\n                (b'content-type', b'text/plain')\n            ]\n        })\n        await send({\n            \"type\": \"http.response.body\",\n            \"body\": b'Hello'\n        })\n    return asgi\n\n\ndef test_app():\n    client = TestClient(app)\n    res = client.get('/')\n    assert res.status_code == 200\n    assert res.text == 'Hello'\n</code></pre>"},{"location":"testclient/#api","title":"API","text":""},{"location":"testclient/#testclient_1","title":"TestClient:","text":"\u53c2\u6570 \u7c7b\u578b \u8bf4\u660e app typing.Callable[[Receive, Send], typing.Awaitable[None]] \u8bf7\u6c42\u5904\u7406\u5165\u53e3\uff0c\u9700\u8fd4\u56de \u5f02\u6b65\u8c03\u7528\u65b9\u6cd5\uff0c\u7528\u4e8e\u5904\u7406\u8bf7\u6c42"},{"location":"websockets/","title":"WebSocket","text":""},{"location":"websockets/#_1","title":"\u8bf4\u660e","text":""},{"location":"websockets/#api","title":"API","text":""},{"location":"websockets/#_2","title":"\u793a\u4f8b","text":""}]}